# Copyright (c) Huawei Technologies Co., Ltd. 2021. All rights reserved.
import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/camera/hal/camera.gni")

ohos_prebuilt_etc("driver_adapter") {
  if (use_musl) {
    source = "//device/hisilicon/hardware/media/hal/camera/libs/hispark_taurus/libdriver_adapter.z.so"
  } else {
    source = "//device/hisilicon/hardware/media/hal/camera/libs/hispark_taurus/std/libdriver_adapter.z.so"
  }
  module_install_dir = "lib/"
  part_name = "hdf"
  subsystem_name = "hdf"
}
#need_link_mpp_lib = true
#if (need_link_mpp_lib) {
#  mpp_lib_path = "//device/hisilicon/hispark_taurus/sdk_linux/soc"
#}
#
#config("mpp_config") {
#  visibility = [ ":*" ]
#
#  cflags = [
#    "-Wall",
#    "-Wextra",
#    "-Werror",
#    "-Wno-error",
#    "-DGST_DISABLE_DEPRECATED",
#    "-DHAVE_CONFIG_H",
#    "-DCOLORSPACE=\"videoconvert\"",
#    "-fno-strict-aliasing",
#    "-Wno-sign-compare",
#    "-Wno-builtin-requires-header",
#    "-Wno-unused-variable",
#    "-Wno-unused-label",
#    "-Wno-implicit-function-declaration",
#    "-Wno-format",
#    "-Wno-int-conversion",
#    "-Wno-unused-function",
#    "-Wno-thread-safety-attributes",
#    "-Wno-inconsistent-missing-override",
#    "-fno-rtti",
#    "-fno-exceptions",
#    "-ffunction-sections",
#    "-fdata-sections",
#  ]
#}
#
#ohos_shared_library("driver_adapter") {
#  sources = [
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/src/hal_codec.c",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/src/hal_proc.c",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/src/hal_sys.c",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/src/hal_vi.c",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/src/hal_vo.c",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/mpp_config.cpp",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sys_object.cpp",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/venc_object.cpp",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/vi_object.cpp",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/vo_object.cpp",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/vpss_object.cpp",
#  ]
#
#  include_dirs = [
#    "$camera_path/include",
#    "$camera_path/utils/watchdog",
#    "//drivers/adapter/uhdf2/include/config",
#    "//drivers/adapter/uhdf2/osal/include",
#    "//drivers/framework/include/config",
#    "//drivers/framework/include/utils",
#    "//drivers/framework/utils/include",
#    "//device/hisilicon/hispark_taurus/sdk_linux/huawei_proprietary/include",
#    "//device/hisilicon/hispark_taurus/sdk_linux/huawei_proprietary/init",
#    "//drivers/peripheral/camera/hal/adapter/chipset/hispark_taurus/include/dirver_adapter",
#    "//device/hisilicon/hardware/media/proprietary/hal/camera/src/hispark_taurus/sdk/include",
#    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata/include",
#    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
#    "//utils/native/base/include",
#  ]
#
#  if (need_link_mpp_lib) {
#    outdir = rebase_path("$mpp_lib_path/lib")
#    ldflags = [ "-L$outdir" ]
#    ldflags += [ "-lhi3516cv500_chnl" ]
#    ldflags += [ "-lhi3516cv500_dis" ]
#    ldflags += [ "-lhi3516cv500_gdc" ]
#    ldflags += [ "-lhi3516cv500_h264e" ]
#    ldflags += [ "-lhi3516cv500_h265e" ]
#    ldflags += [ "-lhi3516cv500_isp" ]
#    ldflags += [ "-lhi3516cv500_ive" ]
#    ldflags += [ "-lhi3516cv500_jpegd" ]
#    ldflags += [ "-lhi3516cv500_jpege" ]
#    ldflags += [ "-lhi3516cv500_rc" ]
#    ldflags += [ "-lhi3516cv500_rgn" ]
#    ldflags += [ "-lhi3516cv500_sys" ]
#    ldflags += [ "-lhi3516cv500_vdec" ]
#    ldflags += [ "-lhi3516cv500_vedu" ]
#    ldflags += [ "-lhi3516cv500_venc" ]
#    ldflags += [ "-lhi3516cv500_vfmw" ]
#    ldflags += [ "-lhi3516cv500_vgs" ]
#    ldflags += [ "-lhi3516cv500_vi" ]
#    ldflags += [ "-lhi3516cv500_vo" ]
#    ldflags += [ "-lhi3516cv500_vpss" ]
#    ldflags += [ "-lhi3516cv500_base" ]
#    ldflags += [ "-lhi_osal" ]
#    ldflags += [ "-lhi_irq" ]
#    ldflags += [ "-lhi_sensor_i2c" ]
#    ldflags += [ "-lhi3516cv500_acodec" ]
#    ldflags += [ "-lhi3516cv500_adec" ]
#    ldflags += [ "-lhi3516cv500_aenc" ]
#    ldflags += [ "-lhi3516cv500_ai" ]
#    ldflags += [ "-lhi3516cv500_aio" ]
#    ldflags += [ "-lhi3516cv500_ao" ]
#    ldflags += [ "-lhi3516cv500_nnie" ]
#    ldflags += [ "-lhive_HPF" ]
#    ldflags += [ "-l_hiawb" ]
#    ldflags += [ "-lhive_AGC" ]
#    ldflags += [ "-lhive_ANR" ]
#    ldflags += [ "-laacdec" ]
#    ldflags += [ "-lhdmi" ]
#    ldflags += [ "-live" ]
#    ldflags += [ "-laacenc" ]
#    ldflags += [ "-l_hildci" ]
#    ldflags += [ "-l_hidrc" ]
#    ldflags += [ "-lhive_RES_ext" ]
#    ldflags += [ "-lmd" ]
#    ldflags += [ "-l_hiacs" ]
#    ldflags += [ "-lhive_wnr" ]
#    ldflags += [ "-lupvqe" ]
#    ldflags += [ "-l_hiawb_natura" ]
#    ldflags += [ "-lhive_record" ]
#    ldflags += [ "-lhive_common" ]
#    ldflags += [ "-laacsbrenc" ]
#    ldflags += [ "-lnnie" ]
#    ldflags += [ "-laaccomm" ]
#    ldflags += [ "-lhive_EQ" ]
#    ldflags += [ "-l_hiir_auto" ]
#    ldflags += [ "-lisp" ]
#    ldflags += [ "-lsecurec" ]
#    ldflags += [ "-l_hidehaze" ]
#    ldflags += [ "-lmpi" ]
#    ldflags += [ "-lhive_talkv2" ]
#    ldflags += [ "-lhive_RES" ]
#    ldflags += [ "-l_hicalcflicker" ]
#    ldflags += [ "-laacsbrdec" ]
#    ldflags += [ "-lsns_imx335" ]
#    ldflags += [ "-l_hiae" ]
#    ldflags += [ "-lhifisheyecalibrate" ]
#    ldflags += [ "-lhive_AEC" ]
#    ldflags += [ "-ldnvqe" ]
#    ldflags += [ "-ltde" ]
#    ldflags += [ "-lVoiceEngine" ]
#    ldflags += [ "-lhi_osal" ]
#    ldflags += [ "-lvb_server" ]
#    ldflags += [ "-lhi_irq" ]
#    ldflags += [ "-lsdk" ]
#
#    deps = [
#      "$camera_path/utils:camera_utils",
#      "$hdf_uhdf_path/config:libhdf_hcs",
#      "$hdf_uhdf_path/osal:libhdf_utils",
#      "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
#    ]
#  }
#  if (is_standard_system) {
#    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
#  } else {
#    external_deps = [ "hilog:libhilog" ]
#  }
#
#  public_configs = [ ":mpp_config" ]
#  subsystem_name = "hdf"
#  part_name = "hdf"
#}
